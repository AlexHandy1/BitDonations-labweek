To-do (labweek)

1. Define specific user stories/ steps for what want to build (high-level features below)
  >> Facilitate a bitcoin transaction (e.g. I can click on a user and donate to them)
  >> Have a database that stores Donaters who sign-up to the site and Receivers (who are displayed on site)
  >> Have a professional looking front page with a grid structure of users that can click on and be taken to a transaction page
  >> User receives a text when transfer complete
  >> User receives an email when they sign-up
  >> Integrate a google chart or something which shows transaction being processed by the website
2. Set-up a wallet, load some bitcoins, get a working understanding of how to make transactions between 2 parties
3. Read about Ethereum, web3 architecture, blockchain etc to get a detailed understanding
  >> Complete ethereum tutorial

Other
1. Daily CodeWars (keep javascript and ruby ticking over)
2. Daily CSS course (use front-end to focus)
  >> How get something centred correctly (e.g. margin auto)?
  >> How get something vertically aligned within bootstrap?
  >> How use flexbox?
  >> What is best way to get things sitting side-by-side
  >> Get a working mobile responsive site
3. Review challenge comments (chitter) and have 1-to-1


Bitcoin qu's/observations
>> set-up and deposit process is very arduous. Still looks like might take a whole week, multiple wallets, sending off to random international bank accounts (e.g. Coinbase), not clear whether you need
>> Do you have a static address or does it change with every transaction? Need to play with this
>> How do you link up addresses to multiple wallets?
>> Where do testnet coins sit? >> separate testable blockchain, need a separate wallet
>> How inputs and outputs work is still not 100% clear and how relates to balances? (e.g. idea that everything is a transaction and can only spend outputs of received transactions)
>> When do you need signatures?
>> Where can you find the stable 'public key'? Doesn't it constantly change? (Khan video discrepancy?)

Chain.inc (seems like I don't need a specific wallet + ruby client)
  >> How do you link method specifically to testnet?
  >> How do you get private keys vs just the address?
  >> is the address basically the public key?
  >> Where can you find the stable 'public key'? Doesn't it constantly change?

Blockchain.info
  >> Seems like works purely off an API params request but may need specific wallet and account
  >> Looks like you can automatically create wallets and addresses which would be very useful

Blockcypher
  >> Seems to have direct access to the Testnet

Stripe
  >> provides more tailored checkout access - could be a good wrapper particularly for conversions


Plan
- Understand what data/ structures need to facilitate a Bitcoin transaction as a merchant (e.g. sign-up flow)
- Understand what APIs/ best way to link into this
- Build basic project structure for Sinatra
- Set-up Models for database
- Basic home-page grid (CSS course)








