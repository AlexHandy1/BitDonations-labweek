To-do (labweek)

1. Define specific user stories/ steps for what want to build (high-level features below)
  >> Facilitate a bitcoin transaction (e.g. I can click on a user and donate to them)
  >> Have a database that stores Donaters who sign-up to the site and Receivers (who are displayed on site)
  >> Have a professional looking front page with a grid structure of users that can click on and be taken to a transaction page
  >> User receives a text when transfer complete
  >> User receives an email when they sign-up
  >> Integrate a google chart or something which shows transaction being processed by the website
2. Set-up a wallet, load some bitcoins, get a working understanding of how to make transactions between 2 parties
3. Read about Ethereum, web3 architecture, blockchain etc to get a detailed understanding
  >> Complete ethereum tutorial

Other
1. Daily CodeWars (keep javascript and ruby ticking over)
2. Daily CSS course (use front-end to focus)
  >> How get something centred correctly (e.g. margin auto)?
  >> How get something vertically aligned within bootstrap?
  >> How use flexbox?
  >> What is best way to get things sitting side-by-side
  >> Get a working mobile responsive site
3. Review challenge comments (chitter) and have 1-to-1


Bitcoin qu's/observations
>> set-up and deposit process is very arduous. Still looks like might take a whole week, multiple wallets, sending off to random international bank accounts (e.g. Coinbase), not clear whether you need
>> Do you have a static address or does it change with every transaction? Need to play with this
>> How do you link up addresses to multiple wallets?
>> Where do testnet coins sit? >> separate testable blockchain, need a separate wallet
>> How inputs and outputs work is still not 100% clear and how relates to balances? (e.g. idea that everything is a transaction and can only spend outputs of received transactions)
>> When do you need signatures?
>> Where can you find the stable 'public key'? Doesn't it constantly change? (Khan video discrepancy?)
>> How will I create a second address?
>> How will I test working? How do I get bitcoins quickly that can test with?
>> How link backend method to a frontend button?
>> is the blockchain wallet address stable?
>> What is the best payment flow for Bitcoin given variance in some wallets e.g. Blockchain seems I can initiate a send via API using a stable address vs Coinbase/ standard where need to put in a recipient address

Other questions
>> What is best way to store images in database? (e.g. entrepreneurs) Separate class e.g. Image?
>> What about entrepreneurs who don't have donors and vice versa? (I just want it to populate when valid)
>> Why isn't my responsive CSS getting picked up from bootstrap
>> Best way to pass in Restful parameters to URL e.g. /ent/:id and get passed in id from each database entry?
>> How exactly does a callback URL work? What used for?

Chain.inc (seems like I don't need a specific wallet + ruby client)
  >> How do you link method specifically to testnet?
  >> How do you get private keys vs just the address?
  >> is the address basically the public key?
  >> Where can you find the stable 'public key'? Doesn't it constantly change?

Blockchain.info
  >> Seems like works purely off an API params request but may need specific wallet and account
  >> Looks like you can automatically create wallets and addresses which would be very useful

Blockcypher
  >> Seems to have direct access to the Testnet

Stripe
  >> provides more tailored checkout access - could be a good wrapper particularly for conversions


Plan - Monday
- Understand what data/ structures need to facilitate a Bitcoin transaction as a merchant (e.g. sign-up flow)
- Understand what APIs/ best way to link into this
- Build basic project structure for Sinatra
- Set-up Models for database
- Basic home-page grid (CSS course)

Plan - Tuesday
- Chase bitcoin API question - try and design some basic tests/ experiments
- Complete donor sign-up user stories (inc. mailgun API link-up)


Bitcoin API Steps

#Step 1 - get a manual, hardcoded 'send' request linked to my addresses working (hardcode amount etc) that is invoked when click Donate button
  #donor clicks on Donate button taken to Make a Donation page
    # >> simplest version would be to manually load my donor wallet address 1 as recipient(eventually call receive API on loaded wallet to get a randomely generated address) and then put in an address wallet address 2 that I create for sender
    # payment = wallet.send([recipient - entrepreneur]'1NAF7GbdyRg3miHNrw2bGxrd63tfMEmJob', [amount]1000000, [from_address - donor]: '1A8JiWcwvpY7tAopUkSnGuEYHmzGYfZPiq')
      # >> could send this with a hidden form underneath button which posts to donation/new and runs the send method whilst also showing a thank you for donation, click to go back to home-page
#Step 2 - donor completes form where they dynamically put in amount and their blockchain wallet address which they want to send from
#Step 3 - dynamically create blockchain wallets (with API) when donors and entrepreneurs sign-up and use convenience methods e.g. new_address, get_address to populate required fields
#Step 4 - add a confirmation step which checks transaction status and calls a Twilio text method (consider moving this up) to send a text
#Step 5 - add in a whole set-up and storage process to create wallet for either party so not brand new with every single transaction, actually want to invite users to set-up and then store?
  >> Donor path
      >> on Donation page add Button ('Create Wallet') which posts to /donation/createwallet which carries over Donor Id. [Also have a button option on Sign-up?]
      >> ask for a password (and optional email to include with wallet) + note down details + include link where can go check/ update
      >> create the wallet and store address in database (save as single additional value)
      >> if that saves or @ent_address then redirect to('/donation/:id/new')
        >> either look into prepopulating form or find neat way to show information that need
  >> Entrepreneur
      >> create sign-up page where automatically create wallet along with entry in database
      >> figure out how will call values from database rather than having to create new wallet


Javascript/ jQuery features
  >> Scroll/ keyboard down to a new page (windows plug-in) e.g. have a landing header page just with powerful image that scrolls (supersized plug-in) then flick down and get to existing layout
  >> Hover over image and see image or video behind it e.g. video of project
  >> Try and chart some data from database or from Bitcoin API?
  >> (http://sidigital.co/) End goal >> some kind of moving animation to explain connecting entrepreneurs and donors

Bugs
>> Known bug is that if you try and donate when you sign-up without logging in then will crash donations
>> Not storing the link or full wallet of entrepreneurs as created so I can never access the links without going into logs









